<Window x:Class="EnterprisePizzaImproved.AddModifyProductDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EnterprisePizzaImproved"
        xmlns:entities="clr-namespace:EnterprisePizzaImproved"
        xmlns:validation="clr-namespace:EnterprisePizzaImproved.UI.Validation"
        mc:Ignorable="d"
        SnapsToDevicePixels="True"
        
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        
        Icon="../Assets/pizza.png"
        Title="Editing Product"
        d:DataContext="{entities:ModifyProducts}" 
        WindowStartupLocation="CenterOwner"
        MinHeight="400"
        MinWidth="400"
        Height="500"
        Width="500"
        >
    <DockPanel>
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Margin="20" Content="Apply" Grid.Column="0" Grid.Row="6" IsDefault="True" Click="OKButton_OnClick">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignFlatButton}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=Name, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=BasePrice, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=PrepareTime, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=Description, Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button Margin="10" Style="{StaticResource MaterialDesignFlatButton}" Content="Cancel" Grid.Column="1" Grid.Row="6" IsCancel="True" Click="CancelButton_OnClick" />
        </StackPanel>
        <ScrollViewer>
            <StackPanel Orientation="Vertical">

                <TextBox Margin="10 20" materialDesign:HintAssist.Hint="Title" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Center" Name="Name">
                    <Binding Path="Product.Title" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:NotEmptyRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <TextBox Margin="10 20" materialDesign:HintAssist.Hint="Description" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Center" Name="Description">
                    <Binding Path="Product.Description" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:NotEmptyRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <ComboBox  Margin="10 20" materialDesign:HintAssist.Hint="Category" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ItemsSource="{Binding Path=PCategory}" SelectedItem="{Binding SelectedPC}" HorizontalContentAlignment="Stretch">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="entities:string">
                            <Label Content="{Binding Path=Name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <TextBox  Margin="10 20" materialDesign:HintAssist.Hint="Base Price" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Center" Name="BasePrice">
                    <Binding Path="Product.BasePrice" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:NotEmptyRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>


                <TextBox Margin="10 20" materialDesign:HintAssist.Hint="Prepare time" Style="{StaticResource MaterialDesignFloatingHintTextBox}" VerticalAlignment="Center" Name="PrepareTime">
                    <Binding Path="Product.PrepareTime" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validation:NotEmptyRule ValidatesOnTargetUpdated="True" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox>

                <materialDesign:Card Margin="10 20" materialDesign:HintAssist.Hint="koko">
                    <StackPanel Orientation="Vertical">
                        <Label Margin="10 ">
                            <Label.Content>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon VerticalAlignment="Center" Kind="Biohazard"/>
                                    <Label>Allergens</Label>
                                </StackPanel>
                            </Label.Content>
                        </Label>

                        <ListBox materialDesign:HintAssist.Hint="Allergens" ItemsSource="{Binding Path=BAllergens}" SelectedItem="{Binding SelectedAllergen}" HorizontalContentAlignment="Stretch">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel IsItemsHost="True" Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="entities:string">
                                    <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Path=Item}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </materialDesign:Card>

            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</Window>
